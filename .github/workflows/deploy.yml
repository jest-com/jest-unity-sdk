name: Build and Upload WebGL

on:
  push:
    branches:
      - main
      - SDKWithDemoProject

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    env:
      UPLOAD_URL: "https://a.messagedisco.com/api/management/games/d3d29990-a6f6-44b1-b5ac-150688526b13/upload-build"
      UPLOAD_TOKEN: ${{ secrets.GAME_UPLOAD_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: UnityDemo/Library
          key: Library-WebGL
          restore-keys: Library-
      - name: Build Unity WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          projectPath: UnityDemo
          versioning: Semantic
          baseVersion: 1.0.0
          customImage: "unityci/editor:ubuntu-6000.2.3f1-webgl-3.2.0"

      - name: Print version
        run: echo "Version is ${{ steps.build.outputs.buildVersion }}"

      - name: Create and push version tag
        if: success()
        run: |
          VERSION="${{ steps.build.outputs.buildVersion }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: List workspace contents
        run: ls -R .
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build/WebGL
      - name: Create ZIP for upload
        run: |
          mkdir -p build_zip
          cd build
          zip -r ../build_zip/game.zip WebGL

      - name: Upload build
        run: |
          curl -X POST \
            -H "X-Game-Upload-Token: $UPLOAD_TOKEN" \
            -H "X-Build-Version: ${{ steps.build.outputs.buildVersion }}" \
            --form file=@build_zip/game.zip \
            "$UPLOAD_URL"
