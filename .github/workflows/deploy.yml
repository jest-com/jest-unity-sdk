name: Build and Upload WebGL

on:
  push:
    branches:
      - main

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    env:
      UPLOAD_URL: ${{ secrets.GAME_UPLOAD_URL }}
      UPLOAD_TOKEN: ${{ secrets.GAME_UPLOAD_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/cache@v3
        with:
          path: UnityDemo/Library
          key: Library-WebGL
          restore-keys: Library-

      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a || true
          sudo rm -f /swapfile || true
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          docker image prune -af
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          df -h

      - name: Build Unity WebGL
        id: build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          projectPath: UnityDemo
          # Don't set SDK version here — only after success
          versioning: None
          customImage: "unityci/editor:ubuntu-6000.2.3f1-webgl-3.2.0"

      - name: Stop if build failed
        if: failure()
        run: |
          echo "❌ Build failed — skipping version bump & tagging."
          exit 1

      - name: Check for SDK changes
        id: sdk_change
        run: |
          if git diff --quiet HEAD^ HEAD -- jest-unity-sdk/; then
            echo "✅ No SDK changes detected."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "✅ SDK changes detected."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Read and bump version
        id: bump
        if: steps.sdk_change.outputs.changed == 'true'
        run: |
          FILE="jest-unity-sdk/package.json"
          VERSION=$(jq -r '.version' $FILE)
          IFS='.' read -r major minor patch <<< "$VERSION"
          patch=$((patch + 1))
          NEW_VERSION="${major}.${minor}.${patch}"

          echo "New version: $NEW_VERSION"
          jq --arg v "$NEW_VERSION" '.version = $v' $FILE > tmp.json && mv tmp.json $FILE

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG with commit messages
        if: steps.sdk_change.outputs.changed == 'true'
        run: |
          FILE="jest-unity-sdk/CHANGELOG.md"
          VERSION="${{ steps.bump.outputs.version }}"
          DATE=$(date +"%Y-%m-%d")

          # Ensure CHANGELOG exists
          if [ ! -f "$FILE" ]; then
            echo "# Changelog" > "$FILE"
            echo "" >> "$FILE"
          fi

          # Get last tag (if any)
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --no-merges --pretty=format:"- %s")
          else
            COMMITS=$(git log $LAST_TAG..HEAD --no-merges --pretty=format:"- %s")
          fi

          echo "" >> "$FILE"
          echo "## $VERSION - $DATE" >> "$FILE"
          echo "$COMMITS" >> "$FILE"

      - name: Commit version bump + changelog
        if: steps.sdk_change.outputs.changed == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add jest-unity-sdk/package.json jest-unity-sdk/CHANGELOG.md
          git commit -m "Bump version to ${{ steps.bump.outputs.version }}"
          git push

      - name: Create and push git tag
        if: steps.sdk_change.outputs.changed == 'true'
        run: |
          VERSION="${{ steps.bump.outputs.version }}"
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Create GitHub Release (draft)
        if: steps.sdk_change.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          name: ${{ steps.bump.outputs.version }}
          draft: true
          body: |
            UPM Install URL:
            https://github.com/${{ github.repository }}.git?path=jest-unity-sdk#${{ steps.bump.outputs.version }}

      - name: Print version
        run: echo "Version is ${{ steps.bump.outputs.version }}"

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ steps.bump.outputs.version }}
          path: build/WebGL

      - name: Create ZIP for upload
        run: |
          mkdir -p build_zip
          cd build/WebGL
          zip -r ../../build_zip/game.zip WebGL

      - name: Upload build
        run: |
          curl -X POST \
            -H "X-Game-Upload-Token: $UPLOAD_TOKEN" \
            -H "X-Build-Version: ${{ steps.bump.outputs.version }}" \
            --form file=@build_zip/game.zip \
            "$UPLOAD_URL"
