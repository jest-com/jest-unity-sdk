name: Build and Upload WebGL

on:
  push:
    branches:
      - main

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    env:
      UPLOAD_URL: ${{ secrets.GAME_UPLOAD_URL }}
      UPLOAD_TOKEN: ${{ secrets.GAME_UPLOAD_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Read and bump version
        id: bump
        run: |
          FILE="jest-unity-sdk/package.json"
          VERSION=$(jq -r '.version' $FILE)
          IFS='.' read -r major minor patch <<< "$VERSION"
          patch=$((patch + 1))
          NEW_VERSION="${major}.${minor}.${patch}"

          echo "New version: $NEW_VERSION"
          jq --arg v "$NEW_VERSION" '.version = $v' $FILE > tmp.json && mv tmp.json $FILE

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add jest-unity-sdk/package.json
          git commit -m "Bump version to ${{ steps.bump.outputs.version }}" || echo "No changes to commit"
          git push

      - uses: actions/cache@v3
        with:
          path: UnityDemo/Library
          key: Library-WebGL
          restore-keys: Library-

      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a || true
          sudo rm -f /swapfile || true
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          docker image prune -af
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          df -h

      - name: Build Unity WebGL
        id: build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          projectPath: UnityDemo
          versioning: Custom
          version: ${{ steps.bump.outputs.version }}
          customImage: "unityci/editor:ubuntu-6000.2.3f1-webgl-3.2.0"

      - name: Print version
        run: echo "Version is ${{ steps.build.outputs.buildVersion }}"

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ steps.build.outputs.buildVersion }}
          path: build/WebGL

      - name: Create ZIP for upload
        run: |
          mkdir -p build_zip
          cd build/WebGL
          zip -r ../../build_zip/game.zip WebGL

      - name: Upload build
        run: |
          curl -X POST \
            -H "X-Game-Upload-Token: $UPLOAD_TOKEN" \
            -H "X-Build-Version: ${{ steps.build.outputs.buildVersion }}" \
            --form file=@build_zip/game.zip \
            "$UPLOAD_URL"
